{"ast":null,"code":"var _jsxFileName = \"/Users/hannaengel/Development/projects/mod4-project-frontend/src/components/DogCard.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Grid } from 'semantic-ui-react';\nimport ReactCardFlip from 'react-card-flip';\nimport CardFront from './CardFront';\nimport CardBack from './CardBack';\nexport default class DogCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped\n    }));\n  }\n\n  render() {\n    const _this$props$dog = this.props.dog,\n          id = _this$props$dog.id,\n          image = _this$props$dog.image,\n          name = _this$props$dog.name;\n    return React.createElement(ReactCardFlip, {\n      isFlipped: this.state.isFlipped,\n      flipDirection: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CardFront, {\n      key: \"front\",\n      dog: this.props.dog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"This is the front of the card.\", React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Click to flip\")), React.createElement(CardBack, {\n      key: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"This is the back of the card.\", React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Click to flip\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/hannaengel/Development/projects/mod4-project-frontend/src/components/DogCard.js"],"names":["React","Component","Card","Form","Grid","ReactCardFlip","CardFront","CardBack","DogCard","constructor","state","isFlipped","handleClick","bind","e","preventDefault","setState","prevState","render","props","dog","id","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC3CQ,EAAAA,WAAW,GAAG;AACV;AACE,SAAKC,KAAL,GAAa;AACbC,MAAAA,SAAS,EAAE;AADE,KAAb;AAGF,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEN,MAAAA,SAAS,EAAE,CAACM,SAAS,CAACN;AAAxB,KAAL,CAAvB;AACD;;AAEHO,EAAAA,MAAM,GAAG;AAAA,4BACqB,KAAKC,KAAL,CAAWC,GADhC;AAAA,UACEC,EADF,mBACEA,EADF;AAAA,UACMC,KADN,mBACMA,KADN;AAAA,UACaC,IADb,mBACaA,IADb;AAEL,WACI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWC,SAArC;AAAgD,MAAA,aAAa,EAAC,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAEE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,EAME,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CANF,CADJ;AAaH;;AA7B0C","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Form, Grid } from 'semantic-ui-react'\nimport ReactCardFlip from 'react-card-flip';\nimport CardFront from './CardFront';\nimport CardBack from './CardBack';\n\nexport default class DogCard extends Component {\n    constructor() {\n        super();\n          this.state = {\n          isFlipped: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n      }\n     \n      handleClick(e) {\n        e.preventDefault();\n        this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n      }\n    \n    render() {\n        const {id, image, name} = this.props.dog\n        return (\n            <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n              <CardFront key=\"front\" dog={this.props.dog}>\n                This is the front of the card.\n                <button onClick={this.handleClick}>Click to flip</button>\n              </CardFront>\n       \n              <CardBack key=\"back\">\n                This is the back of the card.\n                <button onClick={this.handleClick}>Click to flip</button>\n              </CardBack>\n            </ReactCardFlip>\n          )\n    }\n}"]},"metadata":{},"sourceType":"module"}